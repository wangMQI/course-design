#最大文件大小。值可以使用后缀“MB”或“KB”。指示兆字节或千字节大小。
#spring.servlet.multipart.max-file-size=-1
# 最大请求大小可以是mb也可以是kb
#spring.servlet.multipart.max-request-size=-1

# tomcat 相关配置
server:
  port: 8086
  servlet:
    context-path: /
  tomcat:
    uri-encoding: UTF-8

spring:
  datasource:
    #   数据源基本配置
    username: root
    password: 123456
    url: jdbc:mysql://127.0.0.1:3306/video_share_db?characterEncoding=utf-8&autoReconnect=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    #   数据源其他配置
    #初始化时建立物理连接的个数
    initial-size: 5
    #最小连接池数量
    min-idle: 5
    #最大连接池数量 maxIdle已经不再使用
    max-active: 20
    #获取连接时最大等待时间，单位毫秒
    max-wait: 60000
    #申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    test-while-idle: true
    #既作为检测的间隔时间又作为testWhileIdel执行的依据
    time-between-eviction-runs-millis: 60000
    #销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
    min-evictable-idle-time-millis: 30000
    #用来检测连接是否有效的sql 必须是一个查询语句
    #mysql中为 select 'x'
    #oracle中为 select 1 from dual
    validation-query: select 'x'
    #申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
    test-on-borrow: false
    #归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
    test-on-return: false
    # 是否缓存preparedStatement
    pool-prepared-statements: true
    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    #配置监拉统计挡成的filters. stat: 监控统计、Log4j:日志记录、waLL: 防御sqL注入
    #如果启用日志记录时报错java.lang.ClassNotFoundException: org.apache.log4j.Priority
    #则导入Log4j 依赖即时，Maven 地址: https://mvnrepository. com/artifact/log4j/log4
    filters: stat,wall
    max-pool-prepared-statement-per-connection-size: 100
    use-global-data-source-stat: true
    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000


    druid:
      filter:
        wall:
          config:
            multi-statement-allow: true




  servlet:
    multipart: #文件上传配置
      max-file-size: 2048MB
      max-request-size: 100MB


  #缓存配置
  redis:
    host: 192.168.0.0.1
    port: 6379

ffmpeg:
  ffmpegFile: C:\Program Files\ffmpeg\bin\ffmpeg.exe #ffmpeg可执行文件路径


  # 页面修改后立即生效，关闭缓存，立即刷新
  thymeleaf:
    cache: false

  # 热部署生效
  devtools:
    restart:
      enabled: true
      # 设置需要重启的目录
      additional-paths: src/java/main
      # 设置不需要重启的目录
      additional-exclude: static/**,public/**,WEB-INF/**


#文件上传配置
fileupload:
  config:
    # 文件上传目录
    #uploadFolder: /usr/local/upload
    uploadFolder: d://videoShareDb//serve/
    #静态资源对外暴露的访问路径(访问图片的路径)
    staticAccessPath: storage/**
    # 设备截图文件保存路径(文件存在具体的文件夹的路径)
    localPath: cutImage/
    #用户头像存放
    userHeaderPicPath: userAvatar/
    #档案文件存放
    archivesFilePath: upload/
    #访问域名和端口
    domain: http://localhost:${server.port}${server.servlet.context-path}
